/* Main.ino file generated by New Project wizard
 *
 * Created:   Thu Jul 8 2021
 * Processor: Arduino Uno
 * Compiler:  Arduino AVR
 */

// Peripheral Configuration Code (do not edit)
//---CONFIG_BEGIN---
#pragma GCC push_options
#pragma GCC optimize ("Os")

#include <core.h> // Required by cpu
#include <cpu.h>
#include <wire.h> // Required by i2c
#include <i2cport.h>
#include <HardwareSerial.h> // Required by uart
#include <uart.h>

#pragma GCC pop_options

// Peripheral Constructors
CPU &cpu = Cpu;
I2CPort &i2c = I2C;
UART &uart = Uart;

void peripheral_setup () {
 i2c.begin ();
}

void peripheral_loop() {
}
//---CONFIG_END---

void setup () {
peripheral_setup();
   Wire.begin(); // Wire communication begin
  Serial.begin(9600); // The baudrate of Serial monitor is set in 9600
  while (!Serial); // Waiting for Serial Monitor
  Serial.println("\nI2C Scanner");
 
// TODO: put your setup code here, to run once:
}

void loop() {
peripheral_loop();
 byte error, address; //variable for error and I2C address
  int nDevices;

  Serial.println("Scanning...");

  nDevices = 0;
  for (address = 1; address < 127; address++ )
  {
    // The i2c_scanner uses the return value of
    // the Write.endTransmisstion to see if
    // a device did acknowledge to the address.
    Wire.beginTransmission(address);
    error = Wire.endTransmission();

    if (error == 0)
    {
      Serial.print("I2C device found at address 0x");
      if (address < 16)
        Serial.print("0");
      Serial.print(address, HEX);
      Serial.println("  !");
      nDevices++;
    }
    else if (error == 4)
    {
      Serial.print("Unknown error at address 0x");
      if (address < 16)
        Serial.print("0");
      Serial.println(address, HEX);
    }
  }
  if (nDevices == 0)
    Serial.println("No I2C devices found\n");
  else
    Serial.println("done\n");

  delay(5000); // wait 5 seconds for the next I2C scan


// TODO: put your main code here, to run repeatedly:
}
